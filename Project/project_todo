[Да имплементирам] : 
#Да създам начин да не се виждат неща -> публикации, коментари, потребители да не са използваеми...
#Да създам начин за промяна на неща от профила.
#да създам възможност за гледане на публикации.
#Да създам възможност за коментиране на публикации.
#Да създам възможност за харесване/нехаресване на публикации.
#За промяна на публикации от модератори.
#Да не се затриват нещата за публикацията като я променя модератор - да има update, не save/insert ;)
#Да могат да се слагат снимки в статиите и коментарите
#Категории на статий - област и вид на занимание ( да са примерно като checkbox и да могат да се селектират повече от 1 )

Да може статия да се прави неактивна от модератор/администратор - в add_article, което може би е добре да се преименова да се добави нещо и да може да става 		неактивна статията
Търсене по различни критерии - област, вид занимание, ключови думи - възможности за подреждане по различни неща
Да създам възможност за преглед на всички потребители (ако имаш съответните права), промяна на част от данните им.
Да се изнесат нещата за промяна на потребител от администратор като нещо отделно, което extend-ва edit_profile - в момента е объркващо, същото важи и за статиите

Да се оптимизират заявките за like/dislike, comment.

Добавяне на вид на занимание - да се направи формичка с едно поле. Ако не си администратор или модератор - да не е достъпно, иначе да може да се добавя category на 
	статия от там.
~Автоматични тестове
~Следене на потребител и статия - да праща email-и (примерно да можеш да търсиш човек по username/email и да може да се добави за следене - да ти праща емейл като 	публикува нещо)


За Хриси:

Възстановяване на забравена парола - да има формичка за търсене на потребители по username или email с бутонче, което като се натисне да се сменя паролата на 		потребителя - (може да бъда пита или да се види edit_profile как се сменя паролата в базата) и новата парола да се праща с 
	sendNewPasswdMail($email, $nepassword); където email се взима от намерения потребител с findUserByEmail($email); или findUserByUsername($username);
	а паролата се генерира случайно - поне 8 символа букви, *&^%$#@!~+= и цифри

Да показва logout не login горе, ако човека се е логнал - ако трябва може да се предава за всяка страница дали човека се е логнал (да бъда питан ако е така). За 	целта може да се ползва if конструкция в смарти - има я използвана в username_password_form, макар че от там трябва да се махне - да се види.

Да се направи да може да се добавя потребител за следене - формичка за търсене на потребители по username или email с бутонче, което като се натисне да се добавя 	настоящия потребител $_SESSION['id'], да следи намерения потребител (ако има такъв). Да кажем, че $user е намерения потребител. Тогава това може да стане с 	followUser($user['_id'], $_SESSION['id']); Потребител може да се намери с findUserByEmail($email); или findUserByUsername($username);

[Полезни] :
-- 
new function($) {
$.fn.getCursorPosition = function() {
    var pos = 0;
    var el = $(this).get(0);
    // IE Support
    if (document.selection) {
        el.focus();
        var Sel = document.selection.createRange();
        var SelLength = document.selection.createRange().text.length;
        Sel.moveStart('character', -el.value.length);
        pos = Sel.text.length - SelLength;
    }
    // Firefox support
    else if (el.selectionStart || el.selectionStart == '0')
        pos = el.selectionStart;

    return pos;
}
} (jQuery);

$("#myTextBoxSelector").getCursorPosition();
--

-- Добавяне на области в България

db.provinces.insert({'name' : 'Благоевградска'}); 
db.provinces.insert({'name' : 'Бургаска'}); 
db.provinces.insert({'name' : 'Варненска'}); 
db.provinces.insert({'name' : 'Великотърновска'}); 
db.provinces.insert({'name' : 'Видинска'}); 
db.provinces.insert({'name' : 'Врачанска'}); 
db.provinces.insert({'name' : 'Габровска'}); 
db.provinces.insert({'name' : 'Добричка'}); 
db.provinces.insert({'name' : 'Кърджалийска'}); 
db.provinces.insert({'name' : 'Кюстендилска'}); 
db.provinces.insert({'name' : 'Ловешка'}); 
db.provinces.insert({'name' : 'Монтанска'}); 
db.provinces.insert({'name' : 'Пазарджишка'}); 
db.provinces.insert({'name' : 'Пернишка'}); 
db.provinces.insert({'name' : 'Плевенска'}); 
db.provinces.insert({'name' : 'Пловдивска'}); 
db.provinces.insert({'name' : 'Разградска'}); 
db.provinces.insert({'name' : 'Русенска'}); 
db.provinces.insert({'name' : 'Силистренска'}); 
db.provinces.insert({'name' : 'Сливенска'}); 
db.provinces.insert({'name' : 'Смолянска'}); 
db.provinces.insert({'name' : 'София-град'}); 
db.provinces.insert({'name' : 'Софийска'}); 
db.provinces.insert({'name' : 'Старозагорска'}); 
db.provinces.insert({'name' : 'Търговищка'}); 
db.provinces.insert({'name' : 'Хасковска'}); 
db.provinces.insert({'name' : 'Шуменска'}); 
db.provinces.insert({'name' : 'Ямболска'});

-- край

-- Добавяне на категории
db.categories.ensureIndex({name: 1}, {unique: true});
db.categories.insert({'name' :'Катерене'});
db.categories.insert({'name' : 'Колоездене'});
db.categories.insert({'name' : 'Риболов'});
db.categories.insert({'name' : 'Поход'});
-- край


--
<img align="left" src="" alt=""></img>
--


-- masterpiece
db.articles.find({'comments.publisher_id' : ObjectId("4dfa76b2fcddd35b11000002")}).forEach( function(x) { t = x.comments; t != undefined && t.forEach(function(z) { z.publisher_id.toString() == ObjectId("4dfa76b2fcddd35b11000002").toString() && ( z.publisher_name = 'new' ); }); db.articles.save(x); }); 
